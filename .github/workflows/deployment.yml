name: Build and deploy to Docker & DigitalOcean

on:
  push:
    branches:
      - "main"

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.1
#      - name: npm install
#        run: |
#          npm install
#
#  test:
#    runs-on: ubuntu-latest
#    needs: build
#    strategy:
#      matrix:
#        os: [ubuntu-latest]
#        node-version: [16.x]
#    steps:
#      - uses: actions/checkout@v2.3.1
#      - name: Use Node.Js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: npm install & test
#        run: |
#          npm install
#          npm run test:unit
#        env:
#          CI: true

  build-and-deploy:
    runs-on: ubuntu-latest
    #needs: test
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Transfer Docker Compose to remote
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.DO_HOST }}
          port: 22
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }} 
          local_path: ./wellraum-landing/docker-compose.yml
          remote_path: /root/
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Build image
        run: docker build . --file Dockerfile --tag wellraum-landing --label "run-number=${GITHUB_RUN_ID}"
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/wellraum-landing
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag wellraum-landing $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
      - name: Deploy Container to DigitalOcean
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          user: ${{ secrets.DO_USERNAME }}
          pass: ${{ secrets.DO_PASSWORD }}
          command: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker-compose down --remove-orphans
            docker-compose -f docker-compose.yml up -d --build
