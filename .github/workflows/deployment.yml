name: Build and deploy to Docker & DigitalOcean

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - name: npm install
        run: |
          npm install

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Use Node.Js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install & test
        run: |
          npm install
          npm run test:unit
        env:
          CI: true

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      - name: Build image
        run: docker build . --file Dockerfile --tag wellraum-landing --label "run-number=${GITHUB_RUN_ID}"
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/wellraum-landing
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag wellraum-landing $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

          # UNUSED COMMANDS
          # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          # [ "$VERSION" == "main" ] && VERSION=latest
          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION
      - name: Deploy Container to DigitalOcean
        uses: fifsky/ssh-action@master #appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          user: ${{ secrets.DO_USERNAME }}
          pass: ${{ secrets.DO_PASSWORD }}
          command: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/wellraum-landing
            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

            # Pull the Docker Image 
            docker pull $IMAGE_ID:latest
            docker update --restart=no wellraum-landing || true
            # Stop running container
            docker stop wellraum-landing
            # Remove old container
            docker rm wellraum-landing

            # Run a new container from a new image
            docker run -d --restart unsless-stopped -p 3000:3000 --name wellraum-landing $IMAGE_ID:latest

            # UNUSED COMMANDS
            # Strip git ref prefix from version
            # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
            # Use Docker `latest` tag convention
            #[ "$VERSION" == "main" ] && VERSION=latest
            # echo IMAGE_ID=$IMAGE_ID
            # echo VERSION=$VERSION
            # docker pull $IMAGE_ID:$VERSION
            # docker update --restart=no wellraum-landing || true
            # docker stop $(docker ps -a -q) || true
            # docker rm $(docker ps -a -q) || true
            # docker run -d --restart unsless-stopped -p 3000:3000 --name wellraum-landing $IMAGE_ID:$VERSION
