name: Deploy to DigitalOcean

on:
  push: 
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - name: npm install
        run: |
          npm install

  test: 
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x] 
        steps:
          - uses: actions/checkout@v2.3.1
          - name: Use Node.Js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
              node-version: ${{ matrix.node-version }}
          - name: npm install & test
            run: |
              npm install
              npm run test
            env: 
              CI: true

  build-and-deploy: 
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Build image
        run: docker build . --file Dockerfile --tag wellraum-landing --label "run-number=${GITHUB_RUN_ID}"
      - name: Log into registry
        run: echo "{{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/wellraum-landing
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag wellraum-landing $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
